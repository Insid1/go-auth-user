syntax = "proto3";

package auth_v1;

option go_package = "github.com/Insid1/go-auth-user/pkg/grpc/auth_v1;auth_v1";
import "user/user_v1.proto";

service AuthV1 {
  // Register registers a new user.
  rpc Register(RegisterReq) returns (RegisterRes);
  // Login logs in a user and returns an auth token.
  rpc Login(LoginReq) returns (LoginRes);
  // Logout user from all accounts.
  rpc LogoutAll(LogoutAllReq) returns (LogoutAllRes);
  // Checks if Access token is Valid.
  rpc Check(CheckReq) returns (CheckRes);
  // Updates Token pair if refresh token is valid.
  rpc Refresh(RefreshReq) returns (RefreshRes);
}

message TokenPair {
  string access_token = 1;  // Access token of the logged in user.
  string refresh_token = 2; // Refresh token of the logged in user.
}

message RegisterReq {
  string email = 1;    // Email of the user to register.
  string password = 2; // Password of the user to register.
}

message RegisterRes {
  user_v1.User user = 1;
  TokenPair tokenPair = 2;
}

message LoginReq {
  string email = 1;    // Email of the user to login.
  string password = 2; // Password of the user to login.
  int32 app_id = 3;    // ID of the app to login to.
}

message LoginRes { TokenPair tokenPair = 1; }

message LogoutAllReq { string access_token = 1; }

message LogoutAllRes {
  bool success = 1; // true if response success
}

message CheckReq {
  string access_token = 1; // Auth token of the logged in user.
}

message CheckRes {
  bool success = 1; // true if response success
}

message RefreshReq {
  string refresh_token = 1; // Refresh token of the logged in user.
}
message RefreshRes { TokenPair tokenPair = 1; }