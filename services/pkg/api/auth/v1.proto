syntax = "proto3";

package auth_v1;

option go_package = "github.com/Insid1/go-auth-user/pkg/grpc/auth_v1;auth_v1";
import "user/v1.proto";

service AuthV1 {
  // Register registers a new user.
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // Login logs in a user and returns an auth token.
  rpc Login(LoginRequest) returns (LoginResponse);
  // Logout user from all services.
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  // Checks if tokens are valid and generates new ones.
  rpc Check(CheckRequest) returns (CheckResponse);
}
message RegisterRequest {
  string email = 1;    // Email of the user to register.
  string password = 2; // Password of the user to register.
}

message RegisterResponse {
  repeated user_v1.User user = 1; // User ID of the registered user.
}

message LoginRequest {
  string email = 1;    // Email of the user to login.
  string password = 2; // Password of the user to login.
  int32 app_id = 3;    // ID of the app to login to.
}

message LoginResponse {
  string auth_token = 1;    // Auth token of the logged in user.
  string refresh_token = 2; // Refresh token of the logged in user.
}

message LogoutRequest {
  string refresh_token = 1; // Refresh token of the user to logout.
}

message LogoutResponse {
  bool success = 1; // Indicates whether the logout was successful.
}

message CheckRequest {
  string auth_token = 1;    // Auth token of the logged in user.
  string refresh_token = 2; // Refresh token of the logged in user.
}

message CheckResponse {
  string auth_token = 1;    // Auth token of the logged in user.
  string refresh_token = 2; // Refresh token of the logged in user.
}